name: ci

on:
  # 手动触发事件
  workflow_dispatch:
    inputs:
      enable:
        description: "启用或禁用自动 GitHub 自动全绿功能"
        required: true
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'
  push:
    branches:
      - master
  schedule:
    # 每 15 分钟尝试触发一次，一天有 96 个 15 分钟的时间段
    - cron: "*/15 * * * *"

jobs:
  autogreen:
    runs-on: ubuntu-latest
    # 检查是否满足触发条件
    if: |
      (github.event_name == 'schedule' &&
        (
          "`expr ${{ github.run_number }} % 4`" == "0" ||
          "`expr ${{ github.run_number }} % 3`" == "0" ||
          "`expr ${{ github.run_number }} % 2`" == "0"
        )
      ) ||
      github.event_name == 'push' ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.enable == 'true')
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Auto green to show 2024 in light green in 2024
        run: |
          set -e
          git config --local user.email ${{ secrets.EMAIL }}
          git config --local user.name ${{ secrets.NAME }}
          git remote set-url origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git pull --rebase
          # 2024 年 1 月 1 号作为起始日期
          start_date="2024-01-01"
          # 定义 2024 图案的日期偏移量，根据设计思路调整
          offsets_2024=(
            # 数字 2 的偏移量
            0 1 2 8 15 22 29 36 43 50 57 64 71 78 85 92 99 106 113 120 127 134 141 148 155 162 169 176 183 190 197 204 211 218 225 232 239 246 253 260 267 274 281 288 295 302 309 316 323 330 337 344 351 358
            # 数字 0 的偏移量
            3 4 5 6 7 9 10 11 12 13 14 16 17 18 19 20 21 23 24 25 26 27 28 30 31 32 33 34 35 37 38 39 40 41 42 44 45 46 47 48 49 51 52 53 54 55 56 58 59 60 61 62 63 65 66 67 68 69 70 72 73 74 75 76 77 79 80 81 82 83 84 86 87 88 89 90 91 93 94 95 96 97 98 100 101 102 103 104 105 107 108 109 110 111 112 114 115 116 117 118 119 121 122 123 124 125 126 128 129 130 131 132 133 135 136 137 138 139 140 142 143 144 145 146 147 149 150 151 152 153 154 156 157 158 159 160 161 163 164 165 166 167 168 170 171 172 173 174 175 177 178 179 180 181 182 184 185 186 187 188 189 191 192 193 194 195 196 198 199 200 201 202 203 205 206 207 208 209 210 212 213 214 215 216 217 219 220 221 222 223 224 226 227 228 229 230 231 233 234 235 236 237 238 240 241 242 243 244 245 247 248 249 250 251 252 254 255 256 257 258 259 261 262 263 264 265 266 268 269 270 271 272 273 275 276 277 278 279 280 282 283 284 285 286 287 289 290 291 292 293 294 296 297 298 299 300 301 303 304 305 306 307 308 310 311 312 313 314 315 317 318 319 320 321 322 324 325
            # 数字 2 的偏移量（第二个 2）
            42 43 44 50 57 64 71 78 85 92 99 106 113 120 127 134 141 148 155 162 169 176 183 190 197 204 211 218 225 232 239 246 253 260 267 274 281 288 295 302 309 316 323 330 337 344 351 358
            # 数字 4 的偏移量
            45 46 47 54 61 68 75 82 89 96 103 110 117 124 131 138 145 152 159 166 173 180 187 194 201 208 215 222 229 236 243 250 257 264 271 278 285 292 299 306 313 320 327 334 341 348 355
          )
          # 设定全绿区域的提交次数（高频率）
          full_green_commits=5
          # 设定 2024 区域的提交次数（低频率）
          light_green_commits=1
          # 计算 2024 年的总天数
          total_days=366  # 2024 年是闰年
          for ((day = 0; day < total_days; day++)); do
            commit_date=$(date -d "$start_date + $day days" +'%Y-%m-%d %H:%M:%S')
            if printf '%s\n' "${offsets_2024[@]}" | grep -qx "$day"; then
              for ((i = 0; i < light_green_commits; i++)); do
                commit_message="Show 2024 in light green at $commit_date"
                GIT_COMMITTER_DATE="$commit_date" git commit --allow-empty -m "$commit_message" --date "$commit_date"
              done
            else
              for ((i = 0; i < full_green_commits; i++)); do
                commit_message="Keep full green at $commit_date"
                GIT_COMMITTER_DATE="$commit_date" git commit --allow-empty -m "$commit_message" --date "$commit_date"
              done
            fi
          done
          git push    
