name: ci

on:
  workflow_dispatch:
    inputs:
      enable:
        description: "启用或禁用 GitHub 贡献图 2018/2019 显示"
        required: true
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  autogreen:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.enable == 'true'
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Generate 2019 contribution graph (显示2018/2019)
        run: |
          set -e
          git config --local user.email "${{ secrets.EMAIL }}"
          git config --local user.name "${{ secrets.NAME }}"
          git remote set-url origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git pull --rebase

          # 起始日期 (2019-01-06，周日)
          start_date="2019-01-06"

          # 2018/2019 数码管日期偏移量（修正为周日第一行）
          offsets_2018_2019=(
            0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
            34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
            68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95
          )

          # 设定提交次数
          full_green_commits=5
          light_green_commits=1

          # 计算 365 天内的提交
          for ((day = 0; day < 365; day++)); do
            commit_date=$(date -d "$start_date + $day days" +'%Y-%m-%d %H:%M:%S')

            if printf '%s\n' "${offsets_2018_2019[@]}" | grep -qx "$day"; then
              for ((i = 0; i < light_green_commits; i++)); do
                commit_message="Show 2018/2019 in light green at $commit_date"
                GIT_COMMITTER_DATE="$commit_date" git commit --allow-empty -m "$commit_message" --date "$commit_date"
              done
            else
              for ((i = 0; i < full_green_commits; i++)); do
                commit_message="Keep full green at $commit_date"
                GIT_COMMITTER_DATE="$commit_date" git commit --allow-empty -m "$commit_message" --date "$commit_date"
              done
            fi
          done

          git push -u origin main --force
